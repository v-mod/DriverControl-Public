{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nbrain_inertial = Inertial()\nflywheel = Motor(Ports.PORT3, False)\nseesaw = Motor(Ports.PORT10, False)\ncontroller = Controller()\ndriveL = Motor(Ports.PORT1, False)\ndriveR = Motor(Ports.PORT6, True)\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n# \tAuthor:       VEX\n# \tCreated:\n# \tDescription:  VEXcode IQ Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\nshooting=False\nshootUnJam=False\nseesawForward=False\nseesawReverse=False\nseesawUnlocked=True\n\ndef setUp():\n    flywheel.set_stopping(COAST)\n    seesaw.set_stopping(HOLD)\n    flywheel.set_velocity(100,PERCENT)\n    seesaw.set_max_torque(100,PERCENT)\n\ndef inputController():\n    driveVL=controller.axisA.position()\n    driveVR=controller.axisD.position()\n    if controller.buttonLUp.pressing():\n        seesawReverse=False\n        seesawForward=True\n    elif controller.buttonLDown.pressing():\n        seesawForward=False\n        seesawReverse=True\n    else:\n        seesawForward=False\n        seesawReverse=False\n    if controller.buttonRUp.pressing():\n        if shootUnJam:\n            shooting=False\n            shootUnJam=False\n        else:\n            shooting=True\n            shootUnJam=False\n    elif controller.buttonRDown.pressing():\n        if shooting:\n            shootUnJam=False\n            shooting=False\n        else:\n            shootUnJam=True\n    \ndef driveController():\n    driveL.set_velocity(driveVL)\n    driveR.set_velocity(driveVR))\n\ndef shootController():\n    if shooting:\n        flywheel.spin(FORWARD)\n    elif shootUnJam:\n        flywheel.spin(REVERSE)\n    elif flywheel.is_spinning() and not shooting:\n        flywheel.stop()\n    else:\n        flywheel.stop()\n\ndef seesawController():\n    if seesawUnlocked:\n        if seesawForward:\n            seesaw.spin(FORWARD)\n        elif seesawReverse:\n            seesaw.spin(REVERSE)\n        else:\n            seesaw.stop()\n\n\nsetUp()\nwhile True:\n    inputController()\n    driveController()\n    seesawController()\n    shootController()","textLanguage":"python","rconfig":[{"port":[3],"name":"flywheel","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"}},{"port":[10],"name":"seesaw","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"}},{"port":[],"name":"controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"none"}},{"port":[1],"name":"driveL","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"}},{"port":[6],"name":"driveR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse"}}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.2","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","target":"Physical"}
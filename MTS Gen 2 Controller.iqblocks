{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\"l_.ywO{pGd4HZV@})pBU\" x=\"10\" y=\"10\"><next><block type=\"iq_looks_set_touchled_color\" id=\"T0?h|@(Jft)C||KA2k!,\"><field name=\"TOUCHLED\">TouchLED9</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"U1~I4=?|S$FRPW7j[Q?a\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_motion_set_motor_stopping\" id=\"gr?_:I{VD-3Ju!ntC%/]\"><field name=\"MOTOR\">Purple</field><field name=\"MODE\">coast</field><next><block type=\"iq_motion_set_motor_stopping\" id=\"?RXKPL?zn]3obIbM8k![\"><field name=\"MOTOR\">Arm</field><field name=\"MODE\">hold</field><next><block type=\"iq_motion_spin_for\" id=\"W:Bh[L2jHwSMmtscz(X@\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"S-+;U/ojNG{acyQ|qie2\"><field name=\"NUM\">450</field></shadow></value><next><block type=\"iq_looks_set_touchled_brightness\" id=\"m-L=S[WxX[hM;pBWzw.%\"><field name=\"TOUCHLED\">TouchLED9</field><value name=\"VALUE\"><shadow type=\"math_whole_number\" id=\",%23(uMhPktJ1QExD2_R\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"/NfN.2E`38zD3aoUEQ|e\"><field name=\"MOTOR\">Purple</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Q#vfd!nuH?DYEBq,qUyZ\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\".[IGcNke;Ff][_d=RJ;}\"><field name=\"MOTOR\">Arm</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"%zANd~5B?i;g;BTiZYGI\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_velocity\" id=\"UbXKl0Y,EB2Fpv1og9l%\"><field name=\"MOTOR\">Shooter</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"`dQI7L{1:EN8tOeT4+F^\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_motion_set_motor_torque\" id=\"Pq)O,PF`_7Oo2-7%[{0!\"><field name=\"MOTOR\">Shooter</field><value name=\"TORQUE\"><shadow type=\"math_number\" id=\"^fxtKPC,=xSa0qr%:$+G\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_drivetrain_set_drive_velocity\" id=\"d#!f4?3+G]dQK:-a+mSl\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"8*|Y@3L!AsO7wV0-]7v+\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"iq_looks_set_touchled_fade\" id=\"nozCmqFO_xBjg=bJFEKF\"><field name=\"TOUCHLED\">TouchLED9</field><field name=\"setting\">fast</field><next><block type=\"iq_control_forever\" id=\";C2]3DX954bY|r.C$GYa\"><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_touchled_color\" id=\"xfyQ*4/yTh-|{BkZ;3]z\"><field name=\"TOUCHLED\">TouchLED9</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"8=!.p^`6[}6OWfT4+$%+\"><field name=\"COLOR\">red_violet</field></shadow></value></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"}_;-`T4_0;Is7vSa_dp(\" x=\"30\" y=\"1054\"><field name=\"BUTTON\">ButtonRUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"mejT$@de)OZdoJ_3.CTT\"><field name=\"MOTOR\">Shooter</field><field name=\"DIRECTION\">fwd</field><next><block type=\"iq_control_repeat_until\" id=\"#I^^IWf}l:{o7wQaRw$*\"><value name=\"CONDITION\"><block type=\"iq_sensing_pressing_controller\" id=\"mNJ~H~T)g3$WwnWA]x;R\"><field name=\"BUTTON\">ButtonRDown</field></block></value><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then\" id=\"S]`pC?D!5$lZ%VY_yvUo\"><value name=\"CONDITION\"><block type=\"iq_operator_equal_to\" id=\"rWtzw.zggdyL,]zs4n#P\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"3s31/ML6w1#YmEpB_~p]\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_velocity_of_motor\" id=\"0X7zK*EjU;b6fq(0H`R3\"><field name=\"MOTOR\">Shooter</field><field name=\"UNITS\">rpm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"?;(,FrEgua7/l!BLr2}h\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_motion_stop_motor\" id=\"G#cq[~#{z^b3rKrfDbhP\"><field name=\"MOTOR\">Shooter</field><next><block type=\"iq_motion_spin\" id=\"6vi+fu6Za~nF.@HRb?s1\"><field name=\"MOTOR\">Shooter</field><field name=\"DIRECTION\">fwd</field></block></next></block></statement></block></statement><next><block type=\"iq_motion_stop_motor\" id=\"!XGfakKDt5Jn6p}ZO^WO\"><field name=\"MOTOR\">Shooter</field></block></next></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"0iTYa5cTFF$kpNE3*YBp\" x=\"10\" y=\"1510\"><field name=\"BUTTON\">ButtonEUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_spin\" id=\"=qV[cOMX3M],RPjTZHkC\"><field name=\"MOTOR\">Purple</field><field name=\"DIRECTION\">rev</field></block></next></block><block type=\"iq_events_when_touchled\" id=\"5nK)z6ddJYK[:g8/xL(3\" x=\"10\" y=\"1670\"><field name=\"TOUCHLED\">TouchLED9</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_looks_set_touchled_fade\" id=\"Ae8x{8Y-?ATRn|]b]X}[\"><field name=\"TOUCHLED\">TouchLED9</field><field name=\"setting\">fast</field><next><block type=\"iq_looks_set_touchled_color\" id=\"z;]~yadK%u,h,,#!N^8v\"><field name=\"TOUCHLED\">TouchLED9</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\")?Q$QW3_LOGr,VTY5AMi\"><field name=\"COLOR\">yellow_orange</field></shadow></value></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"(E(PTW;_ve_C_CN(_$^%\" x=\"10\" y=\"1970\"><field name=\"BUTTON\">ButtonLDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_stop_motor\" id=\"V3(ycwvR6[BN3CvFw4Lh\"><field name=\"MOTOR\">Arm</field><next><block type=\"iq_motion_spin_for\" id=\"dt9=9f62Gdoct!uB2KwS\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"-xL=AhXr_%IEWADV5uBX\"><field name=\"NUM\">450</field></shadow></value></block></next></block></next></block><block type=\"iq_events_when_controller_button\" id=\"7*QZKJnl#N1@;Cp8qkH,\" x=\"10\" y=\"2130\"><field name=\"BUTTON\">ButtonEDown</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_stop_motor\" id=\"BKcgIPq#89tk%LsKsSbl\"><field name=\"MOTOR\">Purple</field></block></next></block><block type=\"iq_events_when_controller_button\" id=\"6Yvg#9*T%lKIq,J$|E7B\" x=\"10\" y=\"2290\"><field name=\"BUTTON\">ButtonLUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"iq_motion_stop_motor\" id=\"UNSeV]KQ*h;2p8S1A)++\"><field name=\"MOTOR\">Arm</field><next><block type=\"iq_motion_spin_for\" id=\"`SY5EbA~:RyNRbZl+ulM\"><field name=\"MOTOR\">Arm</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">TRUE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"d$08.G9(T`2RXX?=hofp\"><field name=\"NUM\">450</field></shadow></value></block></next></block></next></block></xml>","rconfig":[{"port":[1,6,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"200mm","gearRatio":"1:5","direction":"fwd","gyroType":"integrated","width":"173","unit":"mm","wheelbase":"76","wheelbaseUnit":"mm","xOffset":"0","yOffset":"0","thetaOffset":"0"},"triportSourcePort":22},{"port":[12],"name":"Purple","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[7],"name":"Arm","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"up","rev":"down"},"triportSourcePort":22},{"port":[8],"name":"Shooter","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse"},"triportSourcePort":22},{"port":[],"name":"Controller","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","e":"","eDir":"false","f":"","fDir":"false","l3r3":"","l3r3Dir":"false","drive":"tank"},"triportSourcePort":22},{"port":[9],"name":"TouchLED9","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20220726.10.00.00","appVersion":"2.4.2","minVersion":"2.4.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"Second","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\ninertial BrainInertial = inertial();\nmotor LeftDriveSmart = motor(PORT1, 0.2, false);\nmotor RightDriveSmart = motor(PORT6, 0.2, true);\n\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, BrainInertial, 200);\n\nmotor Purple = motor(PORT12, false);\nmotor Arm = motor(PORT7, false);\nmotor Shooter = motor(PORT8, false);\ncontroller Controller = controller();\ntouchled TouchLED9 = touchled(PORT9);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  BrainInertial.calibrate();\n  while (BrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n// define variables used for controlling motors based on controller inputs\nbool DrivetrainLNeedsToBeStopped_Controller = true;\nbool DrivetrainRNeedsToBeStopped_Controller = true;\n\n// define a task that will handle monitoring inputs from Controller\nint rc_auto_loop_function_Controller() {\n  // process the controller input every 20 milliseconds\n  // update the motors based on the input values\n  while(true) {\n    if(RemoteControlCodeEnabled) {\n      \n      // calculate the drivetrain motor velocities from the controller joystick axies\n      // left = AxisA\n      // right = AxisD\n      int drivetrainLeftSideSpeed = Controller.AxisA.position();\n      int drivetrainRightSideSpeed = Controller.AxisD.position();\n      \n      // check if the value is inside of the deadband range\n      if (drivetrainLeftSideSpeed < 5 && drivetrainLeftSideSpeed > -5) {\n        // check if the left motor has already been stopped\n        if (DrivetrainLNeedsToBeStopped_Controller) {\n          // stop the left drive motor\n          LeftDriveSmart.stop();\n          // tell the code that the left motor has been stopped\n          DrivetrainLNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the left motor nexttime the input is in the deadband range\n        DrivetrainLNeedsToBeStopped_Controller = true;\n      }\n      // check if the value is inside of the deadband range\n      if (drivetrainRightSideSpeed < 5 && drivetrainRightSideSpeed > -5) {\n        // check if the right motor has already been stopped\n        if (DrivetrainRNeedsToBeStopped_Controller) {\n          // stop the right drive motor\n          RightDriveSmart.stop();\n          // tell the code that the right motor has been stopped\n          DrivetrainRNeedsToBeStopped_Controller = false;\n        }\n      } else {\n        // reset the toggle so that the deadband code knows to stop the right motor next time the input is in the deadband range\n        DrivetrainRNeedsToBeStopped_Controller = true;\n      }\n      \n      // only tell the left drive motor to spin if the values are not in the deadband range\n      if (DrivetrainLNeedsToBeStopped_Controller) {\n        LeftDriveSmart.setVelocity(drivetrainLeftSideSpeed, percent);\n        LeftDriveSmart.spin(forward);\n      }\n      // only tell the right drive motor to spin if the values are not in the deadband range\n      if (DrivetrainRNeedsToBeStopped_Controller) {\n        RightDriveSmart.setVelocity(drivetrainRightSideSpeed, percent);\n        RightDriveSmart.spin(forward);\n      }\n    }\n    // wait before repeating the process\n    wait(20, msec);\n  }\n  return 0;\n}\n\ntask rc_auto_loop_task_Controller(rc_auto_loop_function_Controller);\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  TouchLED9.setColor(red);\n  Purple.setStopping(coast);\n  Arm.setStopping(hold);\n  Arm.spinFor(reverse, 450.0, degrees);\n  TouchLED9.setBrightness(100);\n  Purple.setVelocity(100.0, percent);\n  Arm.setMaxTorque(100.0, percent);\n  Shooter.setVelocity(100.0, percent);\n  Shooter.setMaxTorque(100.0, percent);\n  Drivetrain.setDriveVelocity(100.0, percent);\n  TouchLED9.setFade(fast);\n  while (true) {\n    TouchLED9.setColor(red_violet);\n  wait(20, msec);\n  }\n  return 0;\n}\n\n// \"when Controller ButtonRUp pressed\" hat block\nvoid onevent_ControllerButtonRUp_pressed_0() {\n  Shooter.spin(forward);\n  while (!Controller.ButtonRDown.pressing()) {\n    if (Shooter.velocity(rpm) == 0.0) {\n      Shooter.stop();\n      Shooter.spin(forward);\n    }\n  wait(20, msec);\n  }\n  Shooter.stop();\n}\n\n// \"when Controller ButtonEUp pressed\" hat block\nvoid onevent_ControllerButtonEUp_pressed_0() {\n  Purple.spin(reverse);\n}\n\n// \"when TouchLED9 pressed\" hat block\nvoid onevent_TouchLED9_pressed_0() {\n  TouchLED9.setFade(fast);\n  TouchLED9.setColor(yellow_orange);\n}\n\n// \"when Controller ButtonLDown pressed\" hat block\nvoid onevent_ControllerButtonLDown_pressed_0() {\n  Arm.stop();\n  Arm.spinFor(reverse, 450.0, degrees, false);\n}\n\n// \"when Controller ButtonEDown pressed\" hat block\nvoid onevent_ControllerButtonEDown_pressed_0() {\n  Purple.stop();\n}\n\n// \"when Controller ButtonLUp pressed\" hat block\nvoid onevent_ControllerButtonLUp_pressed_0() {\n  Arm.stop();\n  Arm.spinFor(forward, 450.0, degrees, false);\n}\n\n\nint main() {\n  // Calibrate the Drivetrain Gyro\n  calibrateDrivetrain();\n\n  // register event handlers\n  Controller.ButtonRUp.pressed(onevent_ControllerButtonRUp_pressed_0);\n  Controller.ButtonEUp.pressed(onevent_ControllerButtonEUp_pressed_0);\n  TouchLED9.pressed(onevent_TouchLED9_pressed_0);\n  Controller.ButtonLDown.pressed(onevent_ControllerButtonLDown_pressed_0);\n  Controller.ButtonEDown.pressed(onevent_ControllerButtonEDown_pressed_0);\n  Controller.ButtonLUp.pressed(onevent_ControllerButtonLUp_pressed_0);\n\n  wait(15, msec);\n  whenStarted1();\n}","target":"Physical"}